experiment_name: ""
experiment_name_base: fBm_Hurst_conv1D_finetune_until #base name for the experiments
experiment_name_extension: !!python/tuple ['data_params/n'] # Eg using this experiment_name: example_metrics_a-0_b-1
experiment_tags: !!python/tuple ["fBm","Hurst","conv1D","finetune"]
#+-------------+
#| DATA PARAMS |
#+-------------+
#the following parameters will be read by the database file (in this case time_series.py)
data_fname: time_series.py
data_params:
    ts_type: fbm          
    hurst: 
        gen: random.uniform
        a: 0
        b: 1
    epoch_length: 100000
    n: 
        - 200
        - 400
        - 800
        - 1600
        - 3200
        - 6400
        - 12800
    lambd: 1                              
    target_param: !!python/tuple ['hurst']
    method: fft

#+--------------+
#| MODEL PARAMS |
#+--------------+
#this is the way to specify which model to train:
model_checkpoint_path: model_checkpoints/fBm/fBm_Hurst_conv1D_n-100.pt
model_fname: base.py
model_params:
    diff: true
    standardize: true
    invariant_nu_layer: null
    additive_nu_layer: null
    #base_type: polynomial
    #base_dim: 0
    embedding:
        bias: true
        channels: !!python/tuple [1, 64, 64, 128, 128, 128, 128]
        kernel_sizes: 4 
        activation:
            name: PReLU
    adaptive_out_length: 1
    vec_hom: null
    mlp:
        bias: true
        channels: !!python/tuple [128, 64, 1]
        batch_norm: false # Add batch normalization between the output mlp layers (but not after the last)
        dropout: 0
        activation:
            name: PReLU
        
    avg_base: null
    nu_estimator: false
    simple_nu_estimator: false
    rs: null
    init_hom: null

#+--------------+
#| TRAIN PARAMS |
#+--------------+
train_params:
    parallel: false #if true: use torch.nn.DataParallel for multigpu training

    load_previous: true
    auto_save_path_naming: true  #names the saved state dict automatically using the experiment_name_extensions
    auto_save_folder: model_checkpoints/fBm/
    shuffle: false
    freeze_list: !!python/tuple []
    lr: 0.0001
    optimizer_class: torch.optim.AdamW
    loss_fun_class: torch.nn.MSELoss
    
    num_epochs: 20
    train_batch_size: 32
    val_batch_size: 32
    skip_train: false
    skip_val: true

    #? if should be in trainer
    metric_names:

    num_cores: 16
    checkpoint_save_path: null

    metrics:
        session:
            scatter_plot: 
                child_metric: exp_real_inferred
                metric_func: scatter_plot
                metric_params:
                    title: hurst

            deviation_plot: 
                child_metric: exp_real_inferred
                metric_func: deviation
                metric_params:
                    plot_limit: 50000
                    measure_interval: 0.025
                    steps: 1000

            loss_plot: 
                child_metric: exp_loss
                metric_func: general_line_plot
                metric_params:
                    title: fBm Hurst losses

            mse_plot: 
                child_metric: exp_real_inferred
                metric_func: mse
                metric_params:
                    title: hurst
                
        experiment:
            exp_real_inferred:
                child_metric: ep_real_inferred
                metric_func: experiment_saver
                metric_params: !!python/dict {}

            exp_loss:
                child_metric: epoch_loss
                metric_func: experiment_saver
                metric_params: !!python/dict {}

        epoch:
            epoch_loss:
                child_metric: batch_loss
                metric_func: my_avg
                metric_params:
                    message: loss

            ep_real_inferred:
                child_metric: batch_real_inferred
                metric_func: epoch_saver
                metric_params: 
                    start_count: 0
                    overwrite_last: true

        batch:
            batch_real_inferred:
                metric_func: batch_saver
                metric_params:
                    start_count: 0

        #batch_loss is here by default

    running_logs:
        session: true
        experiment: false
        epoch: false
        batch: false
